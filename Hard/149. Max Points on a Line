149. Max Points on a Line

Given n points on a 2D plane, find the maximum number of points that lie on the same straight line.

------------------------------------------------------------------------------------------------------------------------

class Solution {
    public int maxPoints(int[][] points) {
        int n = points.length;
        if(n < 2)
            return n;
        
        HashSet<String> set = new HashSet<>();
        int max = 1;
        
        for(int i = 0; i < n && !set.contains(points[i][0]+"-"+points[i][1]); i++){
            int[] first = points[i];
            HashMap<Double,Integer> map = new HashMap<>();
            int localMax = 1;
            int same = 0;
            for(int j = i+1; j < n; j++){
                int[] second = points[j];
                if(isSamePoint(first,second)){
                    same++;
                    continue;
                }
                double slope = getSlope(first,second);
                map.put(slope,map.getOrDefault(slope,1)+1);
                localMax = Math.max(localMax,map.get(slope));
            }
            set.add(points[i][0]+"-"+points[i][1]);
            max = Math.max(localMax+same,max);
        }
        return max;   
    }
    
    public boolean isSamePoint(int[] first,int[] second){
        return first[0]==second[0] && first[1]==second[1];
    }
    
    public double getSlope(int[] first,int[] second){
        if(second[0] == first[0])
            return Double.MIN_VALUE;
        if(first[1] == second[1])
            return 0;
        
        return ((double)(second[0]-first[0])) / ((double)(second[1]-first[1]));
    }
    
}