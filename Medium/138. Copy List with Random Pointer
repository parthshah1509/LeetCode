138. Copy List with Random Pointer

A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.

Return a deep copy of the list.

--------------------------------------------------------------------------------------------------------------------------------------

//Using a Hashmap

class Solution {
    public Node copyRandomList(Node head) {
        Map<Node,Node> map = new HashMap<Node,Node>();
        Node curr = head;
        Node dummyHead = new Node();
        Node newCurr = dummyHead;
        while(curr != null){
            Node temp = new Node();
            temp.val = curr.val;
            map.put(curr,temp);
            newCurr.next = temp;
            newCurr = newCurr.next;
            curr = curr.next;
        }
        
        curr = head;
        while(curr != null){
            Node clone = map.get(curr);
            clone.random = map.get(curr.random);
            clone.next = map.get(curr.next);
            curr = curr.next;
        }
        return dummyHead.next;
    }
}

-------------------------------------------------------------------------------------------------------------------------------------

//Insert Node into Original List

class Solution {
    public Node copyRandomList(Node head) {
        Node curr = head;
        Node next = null;
        while(curr != null){
            next = curr.next;
            
            Node copy = new Node(curr.val);
            curr.next = copy;
            copy.next = next;
            
            curr = next;
        }
        curr = head;
        while(curr != null){
            if (curr.random != null) {
                curr.next.random = curr.random.next;
            }
            curr = curr.next.next;
        }
        
        Node dummyHead = new Node(0);
        Node cloneListTail = dummyHead;
        Node copy = null;
        curr = head;
        while(curr != null){
            next = curr.next.next;
            copy = curr.next;
            cloneListTail.next = copy;
            cloneListTail = copy;
            curr.next = next;
            curr = next;
        }
        return dummyHead.next;
    }
}