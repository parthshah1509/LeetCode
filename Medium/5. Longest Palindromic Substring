5. Longest Palindromic Substring

Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

---------------------------------------------------------------------------------------------------------------------

class Solution {
    public String longestPalindrome(String s) {
        // String ret;
        if(s.length() <= 1)
            return s;
        int left = 0, right = 0;
        for(int i = 0; i < s.length()-1; i++){
            int len1 = findPalindrome(s, i, i+1);
            int len2 = findPalindrome(s, i, i); 
            int len = Math.max(len1, len2);
            if (len > right - left) {
                left = i - (len - 1) / 2;
                right = i + len / 2;
            }
        }
        return s.substring(left, right + 1);
    }
    public int findPalindrome(String s, int left, int right){
        int palin = 0;
        while(left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)){
                left--;
                right++;
            }
        return right-left-1;
    }
}