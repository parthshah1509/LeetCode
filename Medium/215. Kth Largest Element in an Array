215. Kth Largest Element in an Array

Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.

Example 1:

Input: [3,2,1,5,6,4] and k = 2
Output: 5

------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public int findKthLargest(int[] nums, int k) {
    //     PriorityQueue<Integer> minHeap = new PriorityQueue<Integer>();
    //     for(int num : nums){
    //         minHeap.add(num);
    //         if(minHeap.size() > k)
    //             minHeap.remove();
    //     }
    //     return minHeap.remove();
    // }
    //     Arrays.sort(nums);
    //     return nums[nums.length-k];
    // }
    
        int n = nums.length;
        int left = 0;
        int right = n-1;
        
        Random rand = new Random(0);
        
        while(left <= right){
            int pivot = rand.nextInt(right - left + 1) + left;
            
            int pivotPosition = partition(nums, left, right, pivot);
            
            if(pivotPosition == n-k)
                return nums[pivotPosition];
            else if(pivotPosition < n-k)
                left = pivotPosition + 1;
            else
                right = pivotPosition - 1;
        }
        return -1;
    }
    
    public int partition(int[] nums, int left, int right, int pivot){
        int pivotElement = nums[pivot];
        int tail = left;
        swap(nums,pivot,right);
        
        for(int i = left; i < right; i++){
            if(nums[i] < pivotElement){
                swap(nums,i,tail);
                tail++;
            }
        }
        swap(nums,tail,right);
        return tail;
    }
        
    public void swap(int[] nums, int a, int b){
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
}